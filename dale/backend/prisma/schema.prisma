// Prisma Schema for Dale MVP

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider             = "prisma-client-py"
  recursive_type_depth = 5
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  avatarUrl String?  @map("avatar_url")
  phone     String?
  role      String   @default("rider") // "driver" | "rider"
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  ridesAsDriver Ride[]    @relation("DriverRides")
  bookings      Booking[]

  @@map("users")
}

model Ride {
  id             String   @id @default(uuid())
  driverId       String   @map("driver_id")
  driver         User     @relation("DriverRides", fields: [driverId], references: [id], onDelete: Cascade)

  fromCity       String   @map("from_city")
  fromCoords     Json?    @map("from_coords") // {lat: float, lon: float}
  toCity         String   @map("to_city")
  toCoords       Json?    @map("to_coords")

  dateTime       DateTime @map("date_time")
  seatsTotal     Int      @map("seats_total")
  seatsAvailable Int      @map("seats_available")
  price          Decimal? @db.Decimal(10, 2)
  notes          String?  @db.Text

  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @updatedAt @map("updated_at")

  bookings       Booking[]

  @@index([fromCity, toCity, dateTime], map: "idx_ride_search")
  @@index([driverId], map: "idx_driver_rides")
  @@map("rides")
}

model Booking {
  id        String   @id @default(uuid())
  rideId    String   @map("ride_id")
  ride      Ride     @relation(fields: [rideId], references: [id], onDelete: Cascade)
  riderId   String   @map("rider_id")
  rider     User     @relation(fields: [riderId], references: [id], onDelete: Cascade)

  status    String   @default("confirmed") // "confirmed" | "canceled"
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@unique([rideId, riderId], map: "unique_ride_rider")
  @@index([riderId], map: "idx_rider_bookings")
  @@map("bookings")
}
