# ========================================
# DALE RIDES PLATFORM - VARIABLES DE PRODUCCIÓN
# ========================================
# IMPORTANTE: Mantener este archivo seguro y no subirlo al control de versiones
# Usar herramientas como Doppler, AWS Secrets Manager, o Vercel Environment Variables

# ========================================
# CONFIGURACIÓN GENERAL
# ========================================
NODE_ENV=production
ENV=production

# ========================================
# CONFIGURACIÓN DE SUPABASE
# ========================================
# URL del proyecto Supabase en producción
SUPABASE_URL=https://tu-proyecto.supabase.co

# Clave anónima pública (safe para el frontend)
NEXT_PUBLIC_SUPABASE_ANON_KEY=tu-clave-anonima-publica

# Clave de servicio (MANTENER SECRETA - solo para backend)
SUPABASE_SERVICE_ROLE_KEY=tu-clave-servicio-secreta

# Secreto JWT para verificación de tokens
SUPABASE_JWT_SECRET=tu-jwt-secret-secreto

# ========================================
# CONFIGURACIÓN DE GOOGLE MAPS
# ========================================
# API Key de Google Maps (habilitada para dominios de producción)
NEXT_PUBLIC_GOOGLE_MAPS_API_KEY=tu-google-maps-api-key

# ========================================
# CONFIGURACIÓN DE APIs
# ========================================
# URL del backend API en producción
NEXT_PUBLIC_API_URL=https://tu-backend-api.com

# Puerto del backend (por defecto 8000)
BACKEND_PORT=8000

# Puerto del frontend (por defecto 3000)
FRONTEND_PORT=3000

# ========================================
# CONFIGURACIÓN DE REDIS (OPCIONAL)
# ========================================
# URL de Redis en producción (si usas servicio externo)
REDIS_URL=redis://usuario:password@host:puerto

# Contraseña de Redis
REDIS_PASSWORD=tu-redis-password-secreto

# ========================================
# CONFIGURACIÓN DE SEGURIDAD
# ========================================
# Secret para encriptación de sesiones
SESSION_SECRET=tu-session-secret-muy-secreto

# Secret para tokens de CSRF
CSRF_SECRET=tu-csrf-secret

# ========================================
# CONFIGURACIÓN DE DOMINIOS
# ========================================
# Dominio de producción
DOMAIN=https://tu-dominio.com

# Dominios permitidos para CORS (separados por comas)
CORS_ORIGINS=https://tu-dominio.com,https://www.tu-dominio.com

# ========================================
# CONFIGURACIÓN DE EMAIL (SI APLICA)
# ========================================
# Servicio de email para notificaciones
EMAIL_SERVICE=sendgrid
EMAIL_API_KEY=tu-email-api-key
EMAIL_FROM=noreply@tu-dominio.com

# ========================================
# CONFIGURACIÓN DE MONITOREO
# ========================================
# Sentry para error tracking
SENTRY_DSN=tu-sentry-dsn

# Analytics
GOOGLE_ANALYTICS_ID=G-XXXXXXXXXX

# ========================================
# CONFIGURACIÓN DE CDNs Y STORAGE
# ========================================
# Cloudinary para almacenamiento de imágenes
CLOUDINARY_CLOUD_NAME=tu-cloudinary-cloud-name
CLOUDINARY_API_KEY=tu-cloudinary-api-key
CLOUDINARY_API_SECRET=tu-cloudinary-api-secret

# ========================================
# CONFIGURACIÓN DE LOGGING
# ========================================
# Nivel de logging (error, warn, info, debug)
LOG_LEVEL=info

# ========================================
# CONFIGURACIÓN DE LÍMITES
# ========================================
# Límite de requests por minuto
RATE_LIMIT_REQUESTS=100

# Tamaño máximo de archivo subido (en bytes)
MAX_FILE_SIZE=10485760

# ========================================
# CONFIGURACIÓN DE BACKUP
# ========================================
# Configuración de backups automáticos
BACKUP_SCHEDULE=0 2 * * *
BACKUP_RETENTION_DAYS=30

# ========================================
# CONFIGURACIÓN DE PERFORMANCE
# ========================================
# Cache TTL en segundos
CACHE_TTL=3600

# Pool de conexiones de base de datos
DB_POOL_SIZE=10
DB_POOL_MAX_OVERFLOW=20

# ========================================
# CONFIGURACIÓN DE FEATURES
# ========================================
# Habilitar/deshabilitar features
FEATURE_NOTIFICATIONS_ENABLED=true
FEATURE_ANALYTICS_ENABLED=true
FEATURE_SOCIAL_LOGIN_ENABLED=true

# ========================================
# CONFIGURACIÓN DE DESARROLLO (SOLO PARA TESTING)
# ========================================
# Solo para testing de integración - NO usar en producción real
# TEST_SUPABASE_URL=https://tu-proyecto-test.supabase.co
# TEST_SUPABASE_ANON_KEY=tu-test-anon-key

# ========================================
# CONFIGURACIÓN DE CI/CD
# ========================================
# Para GitHub Actions, GitLab CI, etc.
CI_COMMIT_SHA=${GITHUB_SHA}
CI_COMMIT_BRANCH=${GITHUB_REF_NAME}
CI_COMMIT_AUTHOR=${GITHUB_ACTOR}

# ========================================
# CONFIGURACIÓN DE HEALTH CHECKS
# ========================================
# URLs de health checks externos
HEALTH_CHECK_URL=https://tu-dominio.com/api/health
DATABASE_HEALTH_URL=https://tu-proyecto.supabase.co/rest/v1/

# ========================================
# NOTAS IMPORTANTES
# ========================================
# 
# 1. NUNCA subas este archivo al control de versiones
# 2. Usa .env.example para documentar las variables requeridas
# 3. Configura las variables en tu plataforma de deployment:
#    - Vercel: Project Settings > Environment Variables
#    - AWS: Systems Manager > Parameter Store
#    - Google Cloud: Secret Manager
#    - Docker: Usar --env-file o variables de entorno del sistema
# 
# 4. Para producción, considera usar servicios especializados:
#    - Doppler (https://doppler.com)
#    - AWS Secrets Manager
#    - Google Cloud Secret Manager
#    - Azure Key Vault
# 
# 5. Configura rotation de secrets regularmente
# 6. Usa diferentes valores para staging y production
# 7. Monitorea el acceso a secrets y audita regularmente
